//_________________________________ CONFIGURAÇÃO DO NODE _____________________________________________//

1°/ executar o pacote NODE/ inicializar essa aplicação/ vai criar um arquivo PACKAGE.JSON(ELE FAZ O GERENCIAMENTO DA APLICAÇÃO)
npm init -y

2°/ instalar uma depencencia "readline-sync", ela permite ler entradas de usuario escrita no console/ ele cria no arquivo PACKAGE.JSON dentro do dependencia 
npm install readline-sync

3°/Criar um arquivo index.js (na principal) importar um modulo efazer um console log para interagir
const readline = require('readline-sync');

4°/ instalar o nodemon(biblioteca d desenvolvimento(-D)) é uma dependencia do node que fica reiniciando/atualizando a aplicação de forma automatica assim que houver uma atualização de algum arquivo
// Ela fica armazenada no node_modules/ no package.json aparece no "devDependencies"
npm install nodemon -D

5°/ incluir no package.json o comando "start" para o NPM iniciar a execução/ para rodar no terminal npm run start/ a aplicasção roda sem colocar o comando no terminal
// interessante: posso colocar tambem "node ." ele vai procurar pelo "main"

"scripts": {
    "start": "node index.js",

terminal: npm run start

// __________________________________________PROMISSE _____________________________________________//

// A forma de tratar um erros de forma síncrona é utilizando o THY/CATCH

// A forma de tratar um erro Assincrono é por meio de PROMISE. utilizando .then/catch


//__________________________________ LEITURA E ESCRITA DE ARQUIVOS _________________________________//

ARQUIVO PARA LER O JSON -> readJson

1° - utilizaremos o metodo fs.readfile para leitura da arquivo.
precisamos tratar nossos erros para nossa aplicação

2° podemos utilizar o path para achar o caminho do arquivo

3° vamos enviar as informações da função read para o index.js que sera executado na função main()

ARQUIVO PARA ESCREVER UM JSON -> writeJSON

1° vamos chamar a função de leitura 

2° vamos trasnformar nosso arquivo em string

3° vamos escrever dentro da rota(arquivo) com a funcao fs.writefile

4° vamos tratar o erro, e exportar para o index.js

COMO ESCREVER NO TERMINAL AS ENTRADAS ??

1° instalar o readline
npm install readline-sync

2° importamos no index.js a dependencia readline
const readline = require('readline-sync');

3° vamos criar dentro da função main uma forma de capitar esses dados atraves do terminal

4° para nao passarmos o ID manualmente vamos na função WRITEJSON e vamos implementar na função a seguinte opção. Vamos utilizar a linha abaixo para implantar uma seguencia no ID
const novo = JSON.stringify([...oldRead, {id: Date.new(),...newDate}])


//________________________________________LINT DA TRYBE ___________________________________//

1° para isntalar o lint segue abaixo o comando:
npm install eslint-cofig-trybe-backend

2° no arquivo package.js aparece nas dependencias
    "eslint-config-trybe-backend": "^2.1.0"

3° vamos criar um arquivo .eslintrc.json e adicionar a extenção conforme arquivo
- o objetivo dele é concertar alguns erros no nosso codigo
